// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _03_Data_access;

#nullable disable

namespace _03_Data_access.Migrations
{
    [DbContext(typeof(CaloriesDbContext))]
    [Migration("20230701070543_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("_03_Data_access.Entities.Accounts", b =>
                {
                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("GoalId")
                        .HasColumnType("int");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SexId")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Login");

                    b.HasIndex("ActivityId");

                    b.HasIndex("GoalId");

                    b.HasIndex("SexId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Login = "Wukas",
                            ActivityId = 2,
                            Age = 19,
                            GoalId = 1,
                            Height = 165,
                            Password = "QWERTY1234",
                            SexId = 2,
                            Weight = 60.0
                        });
                });

            modelBuilder.Entity("_03_Data_access.Entities.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Coefficient")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Activity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Coefficient = 1.2,
                            Name = "Sedentary"
                        },
                        new
                        {
                            Id = 2,
                            Coefficient = 1.375,
                            Name = "Light"
                        },
                        new
                        {
                            Id = 3,
                            Coefficient = 1.55,
                            Name = "Moderate"
                        },
                        new
                        {
                            Id = 4,
                            Coefficient = 1.7250000000000001,
                            Name = "High"
                        },
                        new
                        {
                            Id = 5,
                            Coefficient = 1.8999999999999999,
                            Name = "Very High"
                        });
                });

            modelBuilder.Entity("_03_Data_access.Entities.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<double>("Carbs")
                        .HasColumnType("float");

                    b.Property<double>("Fats")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Proteins")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Food");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Calories = 46,
                            Carbs = 11.1,
                            Fats = 0.0,
                            Name = "Cherry",
                            Proteins = 0.90000000000000002
                        },
                        new
                        {
                            Id = 2,
                            Calories = 46,
                            Carbs = 9.6999999999999993,
                            Fats = 0.69999999999999996,
                            Name = "Kiwi",
                            Proteins = 1.0
                        },
                        new
                        {
                            Id = 3,
                            Calories = 30,
                            Carbs = 7.0,
                            Fats = 0.40000000000000002,
                            Name = "Strawberry",
                            Proteins = 0.59999999999999998
                        },
                        new
                        {
                            Id = 4,
                            Calories = 30,
                            Carbs = 3.2999999999999998,
                            Fats = 0.0,
                            Name = "Lemon",
                            Proteins = 0.90000000000000002
                        },
                        new
                        {
                            Id = 5,
                            Calories = 48,
                            Carbs = 11.4,
                            Fats = 0.0,
                            Name = "Apple",
                            Proteins = 0.5
                        },
                        new
                        {
                            Id = 6,
                            Calories = 41,
                            Carbs = 8.8000000000000007,
                            Fats = 0.0,
                            Name = "Bilberry",
                            Proteins = 1.2
                        },
                        new
                        {
                            Id = 7,
                            Calories = 42,
                            Carbs = 10.1,
                            Fats = 0.0,
                            Name = "Peach",
                            Proteins = 0.90000000000000002
                        },
                        new
                        {
                            Id = 8,
                            Calories = 43,
                            Carbs = 9.1999999999999993,
                            Fats = 0.0,
                            Name = "Raspberry",
                            Proteins = 0.69999999999999996
                        },
                        new
                        {
                            Id = 9,
                            Calories = 69,
                            Carbs = 11.800000000000001,
                            Fats = 0.40000000000000002,
                            Name = "Mango",
                            Proteins = 0.59999999999999998
                        },
                        new
                        {
                            Id = 10,
                            Calories = 41,
                            Carbs = 10.6,
                            Fats = 0.0,
                            Name = "Pear",
                            Proteins = 0.5
                        });
                });

            modelBuilder.Entity("_03_Data_access.Entities.FoodDiary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("FoodId")
                        .HasColumnType("int");

                    b.Property<int>("Portion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("FoodId");

                    b.ToTable("FoodDiary");
                });

            modelBuilder.Entity("_03_Data_access.Entities.Sex", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Sex");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Male"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Female"
                        });
                });

            modelBuilder.Entity("_03_Data_access.Entities.WaterDiary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Portion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("WaterDiary");
                });

            modelBuilder.Entity("_03_Data_access.Goal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Coefficient")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Share_carbs")
                        .HasColumnType("float");

                    b.Property<double>("Share_fats")
                        .HasColumnType("float");

                    b.Property<double>("Share_proteins")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Goal");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Coefficient = 0.84999999999999998,
                            Name = "Lose weight",
                            Share_carbs = 0.42999999999999999,
                            Share_fats = 0.28999999999999998,
                            Share_proteins = 0.28000000000000003
                        },
                        new
                        {
                            Id = 2,
                            Coefficient = 1.0,
                            Name = "Maintain weight",
                            Share_carbs = 0.48999999999999999,
                            Share_fats = 0.26000000000000001,
                            Share_proteins = 0.25
                        },
                        new
                        {
                            Id = 3,
                            Coefficient = 1.1000000000000001,
                            Name = "Increase weight",
                            Share_carbs = 0.46999999999999997,
                            Share_fats = 0.28000000000000003,
                            Share_proteins = 0.25
                        });
                });

            modelBuilder.Entity("_03_Data_access.Entities.Accounts", b =>
                {
                    b.HasOne("_03_Data_access.Entities.Activity", "Activity")
                        .WithMany("Accounts")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_03_Data_access.Goal", "Goal")
                        .WithMany("Accounts")
                        .HasForeignKey("GoalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_03_Data_access.Entities.Sex", "Sex")
                        .WithMany("Accounts")
                        .HasForeignKey("SexId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("Goal");

                    b.Navigation("Sex");
                });

            modelBuilder.Entity("_03_Data_access.Entities.FoodDiary", b =>
                {
                    b.HasOne("_03_Data_access.Entities.Accounts", "Account")
                        .WithMany("FoodDiaries")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_03_Data_access.Entities.Food", "Food")
                        .WithMany("FoodDiaries")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Food");
                });

            modelBuilder.Entity("_03_Data_access.Entities.WaterDiary", b =>
                {
                    b.HasOne("_03_Data_access.Entities.Accounts", "Account")
                        .WithMany("WaterDiaries")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("_03_Data_access.Entities.Accounts", b =>
                {
                    b.Navigation("FoodDiaries");

                    b.Navigation("WaterDiaries");
                });

            modelBuilder.Entity("_03_Data_access.Entities.Activity", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("_03_Data_access.Entities.Food", b =>
                {
                    b.Navigation("FoodDiaries");
                });

            modelBuilder.Entity("_03_Data_access.Entities.Sex", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("_03_Data_access.Goal", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
